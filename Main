<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MySocial - Beta Version</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        header {
            background: #3b5998;
            color: white;
            padding: 20px;
            width: 100%;
            text-align: center;
        }
        .container {
            width: 400px;
            margin: 20px auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: transform 0.2s ease;
        }
        .container:hover {
            transform: scale(1.02);
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="text"], input[type="password"], textarea {
            width: 100%;
            padding: 10px;
            border-radius: 4px;
            border: 1px solid #ccc;
            transition: border-color 0.2s;
        }
        input[type="text"]:focus, input[type="password"]:focus, textarea:focus {
            border-color: #3b5998;
        }
        button {
            padding: 10px 20px;
            border: none;
            background: #3b5998;
            color: white;
            border-radius: 4px;
            cursor: pointer;
            transition: background 0.2s;
        }
        button:hover {
            background: #2d4373;
        }
        .hidden {
            display: none;
        }
        .post-input {
            margin: 20px 0;
        }
        .post {
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
            transition: background 0.2s;
        }
        .post:hover {
            background: #f9f9f9;
        }
        .comment-input {
            display: flex;
            margin-top: 10px;
        }
        .comment-input textarea {
            flex: 1;
            padding: 5px;
            border: 1px solid #ccc;
            border-radius: 4px;
            transition: border-color 0.2s;
        }
        .comment-input textarea:focus {
            border-color: #3b5998;
        }
    </style>
</head>
<body>
    <header>
        <h1>MySocial</h1>
        <p>Connect with friends and the world around you.</p>
    </header>

    <div class="container" id="authContainer">
        <h2>Login / Sign Up</h2>
        <div id="loginForm">
            <div class="form-group">
                <input type="text" id="loginUsername" placeholder="Username">
            </div>
            <div class="form-group">
                <input type="password" id="loginPassword" placeholder="Password">
            </div>
            <button onclick="login()">Login</button>
            <p>Don't have an account? <a href="#" onclick="showSignup()">Sign Up</a></p>
        </div>

        <div id="signupForm" class="hidden">
            <div class="form-group">
                <input type="text" id="signupUsername" placeholder="Username">
            </div>
            <div class="form-group">
                <input type="password" id="signupPassword" placeholder="Password">
            </div>
            <button onclick="signup()">Sign Up</button>
            <p>Already have an account? <a href="#" onclick="showLogin()">Login</a></p>
        </div>
    </div>

    <div class="container hidden" id="mainContent">
        <div class="post-input">
            <textarea id="postContent" placeholder="What's on your mind?"></textarea>
            <button onclick="addPost()">Post</button>
        </div>
        <div id="posts"></div>
    </div>

    <script>
        let currentUser = '';

        // Load users and posts from localStorage
        document.addEventListener("DOMContentLoaded", () => {
            loadPosts();
        });

        function showSignup() {
            document.getElementById('loginForm').classList.add('hidden');
            document.getElementById('signupForm').classList.remove('hidden');
        }

        function showLogin() {
            document.getElementById('signupForm').classList.add('hidden');
            document.getElementById('loginForm').classList.remove('hidden');
        }

        function signup() {
            const username = document.getElementById('signupUsername').value;
            const password = document.getElementById('signupPassword').value;
            if (username && password) {
                const users = JSON.parse(localStorage.getItem('users')) || [];
                if (users.some(user => user.username === username)) {
                    alert('Username already exists!');
                } else {
                    users.push({ username, password });
                    localStorage.setItem('users', JSON.stringify(users));
                    alert('Signup successful! You can now log in.');
                    showLogin();
                }
            } else {
                alert('Please fill in all fields.');
            }
        }

        function login() {
            const username = document.getElementById('loginUsername').value;
            const password = document.getElementById('loginPassword').value;
            const users = JSON.parse(localStorage.getItem('users')) || [];
            if (users.some(user => user.username === username && user.password === password)) {
                alert('Login successful!');
                currentUser = username;
                document.getElementById('authContainer').classList.add('hidden');
                document.getElementById('mainContent').classList.remove('hidden');
            } else {
                alert('Invalid username or password.');
            }
        }

        function addPost() {
            const content = document.getElementById('postContent').value;
            if (content) {
                const posts = JSON.parse(localStorage.getItem('posts')) || [];
                const newPost = {
                    username: currentUser,
                    content: content,
                    comments: []
                };
                posts.push(newPost);
                localStorage.setItem('posts', JSON.stringify(posts));
                displayPosts(posts);
                document.getElementById('postContent').value = '';
            } else {
                alert('Please enter content for your post.');
            }
        }

        function displayPosts(posts) {
            const postsDiv = document.getElementById('posts');
            postsDiv.innerHTML = ''; // Clear previous posts
            posts.forEach(post => {
                const postDiv = document.createElement('div');
                postDiv.classList.add('post');
                postDiv.innerHTML = `<strong>${post.username}</strong> <p>${post.content}</p>
                    <div class="comment-input">
                        <textarea placeholder="Add a comment..."></textarea>
                        <button onclick="addComment(this, '${post.username}', '${post.content}')">Comment</button>
                    </div>
                    <div class="comments">${post.comments.map(comment => `<div><strong>${comment.username}:</strong> ${comment.content}</div>`).join('')}</div>`;
                postsDiv.appendChild(postDiv);
            });
        }

        function loadPosts() {
            const posts = JSON.parse(localStorage.getItem('posts')) || [];
            displayPosts(posts);
        }

        function addComment(button, postUsername, postContent) {
            const commentInput = button.previousElementSibling;
            const commentContent = commentInput.value;
            if (commentContent) {
                const posts = JSON.parse(localStorage.getItem('posts')) || [];
                const postIndex = posts.findIndex(post => post.username === postUsername && post.content === postContent);
                if (postIndex >= 0) {
                    posts[postIndex].comments.push({ username: currentUser, content: commentContent });
                    localStorage.setItem('posts', JSON.stringify(posts));
                    displayPosts(posts);
                    commentInput.value = '';
                }
            } else {
                alert('Please enter a comment.');
            }
        }
    </script>
</body>
</html>
